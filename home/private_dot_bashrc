#!/bin/bash

set -o vi
umask 0077

# ----------------------------------------------------------------------
# --- Variables
#
# XDG
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_STATE_HOME="${HOME}/.local/state"

# General
export TERM="xterm-256color"
export EDITOR_PREFIX="nvim"
export EDITOR="nvim"
export VISUAL="nvim"
export CLICOLOR=1
export PAGER="less"
export HISTCONTROL=ignoreboth
export LESSHISTFILE="-"
export TMPDIR="/tmp"
export INPUTRC="${XDG_CONFIG_HOME}/shell/inputrc"

# User
export USER="$(whoami)"
export DOT="${HOME}/.dot"
export SCRIPTS="${HOME}/.local/bin"
export WORKSPACE="${HOME}/Workspace"
export REPOS="${WORKSPACE}/repos"
export GHREPOS="${REPOS}/github.com"
export GLREPOS="${REPOS}/gitlab.com"
export NOTES="${XDG_DATA_HOME}/notes"
export PDFS="${GHREPOS}/${USER}/pdfs"

# Go
export GOPATH="${XDG_DATA_HOME}/go"
export GOBIN="${HOME}/.local/bin"

# Rust
export CARGO_HOME="${XDG_DATA_HOME}/cargo"
export RUSTUP_HOME="${XDG_DATA_HOME}/rust"

# ----------------------------------------------------------------------
# --- Aliases
alias '?'='duck'
alias 'cd..'='cd ..'
alias ls="/bin/ls -la --color"
alias chmox="chmod u+x"
alias temp="cd $(mktemp -d)"
alias pn="pnpm"

# ----------------------------------------------------------------------
# --- Functions
function __exists() {
    type "$1" &>/dev/null
}

function reload() {
    source "${HOME}/.bashrc"
}

function clone() {
    local output repo_dir
    output="$("${SCRIPTS}/clone" -d "${REPOS}" -u "${USER}" -r "github.com" "$@" 2>&1 | tee /dev/tty)"
    repo_dir="$(echo "${output}" | tail -n 1)"
    [[ -d "${repo_dir}" ]] && cd "${repo_dir}" || return 1
}

function pathappend() {
    declare arg
    for arg in "$@"; do
        test -d "${arg}" || continue
        PATH=${PATH//":$arg:"/:}
        PATH=${PATH/#"$arg:"/}
        PATH=${PATH/%":$arg"/}
        export PATH="${PATH:+"$PATH:"}${arg}"
    done
}

function pathprepend() {
    for arg in "$@"; do
        test -d "${arg}" || continue
        PATH=${PATH//:"$arg:"/:}
        PATH=${PATH/#"$arg:"/}
        PATH=${PATH/%":$arg"/}
        export PATH="${arg}${PATH:+":${PATH}"}"
    done
}

# ----------------------------------------------------------------------
# --- PATH and CDPATH
pathprepend \
    "${PNPM_HOME}" \
    "${GOBIN}" \
    "${HOME}/.nix-profile/bin" \
    "${HOME}/.local/bin"

pathappend \
    /usr/local/bin \
    /usr/local/sbin \
    /usr/local/games \
    /usr/games \
    /usr/sbin \
    /usr/bin \
    /snap/bin \
    /sbin \
    /bin

export CDPATH=".:${REPOS}:${GHREPOS}:${GHREPOS}/${USER}:${GLREPOS}:${GLREPOS}/${USER}:${WORKSPACE}:${HOME}"

# ----------------------------------------------------------------------
# --- Prompt
__prompt() {
    local username='\u' hostname='\h' character='❯' status="$?" status_color \
        git_branch format directory_prefix directory directory_suffix toolbox \
        o='\[\e[1;30m\]' r='\[\e[1;31m\]' g='\[\e[1;32m\]' \
        y='\[\e[1;33m\]' b='\[\e[1;34m\]' m='\[\e[1;35m\]' \
        c='\[\e[1;36m\]' w='\[\e[1;37m\]' d='\[\e[0m\]'

    status_color=${g}
    directory="${b}${PWD##*/}${d}"
    git_branch="$(git branch --show-current 2>/dev/null)"

    [[ "${status}" != 0 ]] && status_color="${r}"
    [[ "${PWD}" == / ]] && directory="${b}/${d}"
    [[ "${PWD}" == "$HOME" ]] && directory="${b}~${d}"
    [[ "${PWD}" != $HOME* ]] && directory_suffix="🔒"
    [[ -n "${git_branch}" ]] && git_branch=" on${m}  ${git_branch}${d}"
    [[ -f "/run/.toolboxenv" ]] && toolbox=" in${c} $(cat /run/.containerenv | grep -oP "(?<=name=\")[^\";]+")"

    format="\n${directory_prefix}${directory}${directory_suffix}${git_branch}${toolbox} \n${status_color}${character} ${d}"
    PS1="${format}"
}

PROMPT_COMMAND="__prompt"

# ----------------------------------------------------------------------
# --- Direnv
if __exists direnv; then
    eval "$(direnv hook bash)"
fi

# ----------------------------------------------------------------------
# --- Dircolors
if __exists dircolors; then
    if [[ -r "${XDG_CONFIG_HOME}/shell/dircolors" ]]; then
        eval "$(dircolors -b "${XDG_CONFIG_HOME}/shell/dircolors")"
    else
        eval "$(dircolors -b)"
    fi
fi

# ----------------------------------------------------------------------
# --- Bash completion
if [[ -r "/usr/share/bash-completion/bash_completion" ]]; then
    source "/usr/share/bash-completion/bash_completion"
fi

# ----------------------------------------------------------------------
# --- Personal environment
if [[ -r "${XDG_CONFIG_HOME}/shell/personal" ]]; then
    source "${XDG_CONFIG_HOME}/shell/personal"
fi
